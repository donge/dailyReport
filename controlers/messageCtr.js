// Generated by CoffeeScript 1.10.0
(function() {
  var Response, check, messageModel, showPage, userModel, utils;

  check = require('validator').check;

  messageModel = require('../models/messageModel');

  userModel = require('../models/usersModel');

  utils = require('../utils');

  Response = require('../vo/Response').Response;

  exports.show = function(req, res) {
    if (!utils.authenticateUser(req, res)) {
      return;
    }
    return showPage(req, res, "message");
  };

  showPage = function(req, res, pageTitle, data) {
    var userId;
    if (data == null) {
      data = null;
    }
    userId = req.session.userId;
    if (!data) {
      data = {};
    }
    data["isLoginUser"] = utils.isLoginUser(req);
    data["isAdmin"] = utils.isAdmin(req);
    return messageModel.getMessages(userId, function(response) {
      return res.render(pageTitle, data);
    });
  };

  exports.send = function(req, res) {
    var error, error1, message, receiver, senderId;
    if (!utils.authenticateUser(req, res)) {
      return;
    }
    senderId = req.session.userId;
    receiver = req.body.receiver;
    message = req.body.message;
    try {
      check(receiver).notEmpty();
      check(message).notEmpty();
      check(senderId).notEmpty();
      return messageModel.createMessage(senderId, receiver, message, function(response) {
        return res.send(response);
      });
    } catch (error1) {
      error = error1;
      return res.send(new Response(0, "短消息或者内容为空"));
    }
  };

  exports.delMessage = function(req, res) {
    var messageId, userId;
    if (!utils.authenticateUser(req, res)) {
      return;
    }
    userId = req.session.userId;
    messageId = req.body.messageId;
    return messageModel.deleteMessage(userId, messageId, function(response) {
      return res.send(response);
    });
  };

  exports.getMessages = function(req, res) {
    var error, error1, userId;
    if (!utils.authenticateUser(req, res)) {
      return;
    }
    userId = req.body.userId;
    if (!userId) {
      userId = req.session.userId;
    }
    try {
      return messageModel.getMessages(userId, function(response) {
        return res.send(response);
      });
    } catch (error1) {
      error = error1;
      return res.send(new Response(0, "短消息获取错误"));
    }
  };

}).call(this);
