// Generated by CoffeeScript 1.10.0
(function() {
  var NUMOFPAGE, ShowMessagesViewModel, confirm, deleteMessage, getMessages, messageVM;

  ShowMessagesViewModel = function() {
    var self;
    self = this;
    self.messages = ko.observableArray([]);
    self.userId = ko.observable(null);
    return self;
  };

  NUMOFPAGE = 10;

  getMessages = function(userId) {
    var data;
    if (userId == null) {
      userId = null;
    }
    data = {
      userId: userId
    };
    return MessageModel.getMessages(data, function(response) {
      if (response.state === 0) {
        return;
      }
      return messageVM.messages(response.data);
    });
  };

  window.initPageState = function() {
    messageVM.messages([]);
    return messageVM.userId(null);
  };

  messageVM = new ShowMessagesViewModel();

  ko.applyBindings(messageVM);

  window.gets = getMessages;

  window.messageVM = messageVM;

  getMessages();

  $("div.pagination").on("click", "button.pageNext", function() {
    gotoPage(reportvm.currentPage() + 1);
    return false;
  });

  $("div.pagination").on("click", "button.pagePre", function() {
    gotoPage(reportvm.currentPage() - 1);
    return false;
  });

  $("#messageSendBtn").click(function(event) {
    var data, receiverId;
    receiverId = $("#receiver").val();
    data = {
      receiver: receiverId,
      message: $("#messageTxt").val()
    };
    return MessageModel.createMessage(data, function(response) {
      if (response.state === 0) {
        return;
      }
      return window.location.href = "/message";
    });
  });

  confirm = function(reportId) {
    return $("#dialog-confirm").dialog({
      dialogClass: "no-close",
      resizable: false,
      height: 160,
      modal: true,
      buttons: {
        "删除": function() {
          deleteMessage(reportId);
          return $(this).dialog("close");
        },
        Cancel: function() {
          return $(this).dialog("close");
        }
      }
    });
  };

  $("#messageList").on("click", "p.delete", function() {
    var messageId;
    console.log("del message");
    messageId = $(this).attr("messageId");
    return confirm(messageId);
  });

  window.gotoPage = function(page) {
    return getMessages(messageVM.userId());
  };

  deleteMessage = function(messageId) {
    return MessageModel.delMessage({
      messageId: messageId
    }, function(response) {
      if (response.state === 0) {
        return;
      }
      return window.location.href = "/message";
    });
  };

}).call(this);
